# Application Configuration
spring.application.name=carslab-crm
server.port=8080

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/formfiller
spring.datasource.username=postgresadmin
spring.datasource.password=postgresadmin
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Properties
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.jpa.open-in-view=false

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.leak-detection-threshold=60000

# Redis Configuration (Fixed)
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=
spring.data.redis.timeout=2000ms

# File Upload
spring.servlet.multipart.max-file-size=25MB
spring.servlet.multipart.max-request-size=25MB

# Security JWT Configuration - POPRAWIONE
security.jwt.secret=jXn2r5u8x/A?D(G+KbPeShVmYp3s6v9y$B&E)H@McQfTjWnZr4t7w!z%C*F-JaNd
security.jwt.token-prefix=Bearer 
security.jwt.token-expiration=86400000

# App JWT Configuration (for tablet tokens) - POPRAWIONE
app.jwt.secret=jXn2r5u8x/A?D(G+KbPeShVmYp3s6v9y$B&E)H@McQfTjWnZr4t7w!z%C*F-JaNd
app.jwt.expiration=86400

# WebSocket Configuration - POPRAWIONE
app.websocket.base-url=ws://localhost:8080
app.websocket.allowed-origins=http://localhost:*,https://localhost:*,https://*.carslab.com

# OpenAI Configuration
openai.api.key=x
openai.api.model=gpt-4o
openai.api.url=https://api.openai.com/v1/chat/completions
openai.connect.timeout=60000
openai.read.timeout=90000

# Actuator/Management
management.endpoints.web.exposure.include=health,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.metrics.export.prometheus.enabled=true

# Resilience4j Configuration
resilience4j.circuitbreaker.instances.signature-request.register-health-indicator=true
resilience4j.circuitbreaker.instances.signature-request.ring-buffer-size-in-closed-state=10
resilience4j.circuitbreaker.instances.signature-request.ring-buffer-size-in-half-open-state=3
resilience4j.circuitbreaker.instances.signature-request.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.signature-request.failure-rate-threshold=50

resilience4j.retry.instances.signature-request.max-attempts=3
resilience4j.retry.instances.signature-request.wait-duration=1s

resilience4j.timelimiter.instances.signature-request.timeout-duration=30s

# Logging Configuration
logging.level.root=INFO
logging.level.com.carslab.crm=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web.socket=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Transaction Configuration
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
spring.transaction.default-timeout=30

# CORS Configuration - DODANE
spring.web.cors.allowed-origins=http://localhost:3000,http://127.0.0.1:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# =====================================
# QUARTZ SCHEDULER CONFIGURATION (FIXED)
# =====================================

# Podstawowa konfiguracja Quartz
spring.quartz.job-store-type=jdbc
spring.quartz.jdbc.initialize-schema=always
spring.quartz.auto-startup=true
spring.quartz.startup-delay=10s
spring.quartz.wait-for-jobs-to-complete-on-shutdown=true
spring.quartz.overwrite-existing-jobs=true

# Szczegó?owe w?a?ciwo?ci Quartz
spring.quartz.properties.org.quartz.scheduler.instanceName=CRMScheduler
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO

# Thread Pool
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.threadCount=5
spring.quartz.properties.org.quartz.threadPool.threadPriority=5

# JobStore configuration dla PostgreSQL
spring.quartz.properties.org.quartz.jobStore.class=org.springframework.scheduling.quartz.LocalDataSourceJobStore
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
spring.quartz.properties.org.quartz.jobStore.useProperties=true
spring.quartz.properties.org.quartz.jobStore.tablePrefix=QRTZ_
spring.quartz.properties.org.quartz.jobStore.misfireThreshold=60000
spring.quartz.properties.org.quartz.jobStore.isClustered=false
spring.quartz.properties.org.quartz.jobStore.txIsolationLevelSerializable=false

# Dodatkowe w?a?ciwo?ci dla stabilno?ci
spring.quartz.properties.org.quartz.jobStore.acquireTriggersWithinLock=true
spring.quartz.properties.org.quartz.jobStore.selectWithLockSQL=SELECT * FROM {0}LOCKS WHERE SCHED_NAME = {1} AND LOCK_NAME = ? FOR UPDATE